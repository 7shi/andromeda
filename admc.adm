printfln("Andromeda ver.%s", Root.VERSION);
var start = DateTime.Now;

var admk = Directory.GetFilesWith(".", "*.admk");
if (admk.Length > 0)
{
    for (int i = 0; i < admk.Length; i++)
        readAdmk(admk[i]);
}
else
    compile(null, null, "output.exe", true);

println();
var end = DateTime.Now;
printfln("総所要時間: %s", end.Sub(start).ToString());

{ _Finish _finish; }

function readAdmk(admk : string)
{
    var sr = new StreamReader;
    if (sr.Open(admk))
    {
        var line : string;
        var srcs = new StringList;
        var libs = new StringList;
        var verbose = false;
        var adms : string[];
        var src = new string[1];
        var libsa : string[];
        while ((line = sr.ReadLine()) != null)
        {
            if (line.StartsWith("#")) continue;
            int p = line.IndexOfChar(' ');
            var cmd : string;
            var tgt : string;
            if (p < 0)
            {
                cmd = line;
                tgt = null;
            }
            else
            {
                cmd = line.Substring(0, p);
                tgt = line.SubstringFrom(p + 1);
            }
            switch (cmd)
            {
            case "verbose":
                verbose = true;
                break;
            case "dir":
                libs.Add(tgt);
                break;
            case "src":
                srcs.Add(tgt);
                break;
            case "exe":
                compile(srcs.ToArray(), libs.ToArray(), tgt, verbose);
                srcs.Clear();
                libs.Clear();
                verbose = false;
                break;
            case "foreach":
                if (tgt != null)
                    adms = Directory.GetFilesWith(tgt, "*.adm");
                else
                    adms = Directory.GetFilesWith(".", "*.adm");
                libsa = libs.ToArray();
                for (int i = 0; i < adms.Length; i++)
                {
                    src[0] = adms[i];
                    if (tgt == null) src[0] = Path.GetFileName(src[0]);
                    compile(src, libsa, Path.ChangeExtension(src[0], ".exe"), verbose);
                }
                srcs.Clear();
                libs.Clear();
                verbose = false;
                break;
            }
        }
        sr.Close();
    }
}

function compile(srcs : string[], libs : string[], output : string, verbose : bool)
{
    if (File.Exists(output)) return;

    println();
    var s = DateTime.Now;

    if (!verbose)
        printfln("パースしています...");
    var root = new Root;
    if (libs != null && libs.Length > 0)
    {
        for (int i = 0; i < libs.Length; i++)
            readDir(root, verbose, libs[i]);
    }
    else
    {
        var dirs = Directory.GetDirectories(".");
        for (int i = 0; i < dirs.Length; i++)
            readDir(root, verbose, Path.GetFileName(dirs[i]));
    }
    if (srcs != null && srcs.Length > 0)
    {
        for (int i = 0; i < srcs.Length; i++)
            parse(root, verbose, srcs[i]);
    }
    else
    {
        var files = Directory.GetFilesWith(".", "*.adm");
        for (int i = 0; i < files.Length; i++)
            parse(root, verbose, Path.GetFileName(files[i]));
    }

    if (verbose)
        printfln("型をチェックしています...");
    else
        printfln("コンパイルしています...");
    Define.CompileVerbose = verbose;
    var module = new Module;
    module.Specific.SubSystem = root.Subsystem;
    var codes = OpModule.Create(module);
    root.AddCodes(codes);
    module.Text.OpCodes = codes.ToArray();

    printfln("リンクしています...");
    module.Link(output);
    printfln("出力しました: %s", output.Replace("\\", "/"));

    var e = DateTime.Now;
    printfln("所要時間: %s", e.Sub(s).ToString());
}

function parse(root : Root, verbose : bool, src : string)
{
    var src2 = src.Replace("\\", "/");
    if (verbose)
        printfln("パースしています: %s", src2);
    var sr = new StreamReader;
    if (sr.Open(src))
    {
        root.ReadText(src2, sr.ReadToEnd());
        sr.Close();
    }
    else
        raise("ファイルが開けません。");
}

function readDir(root : Root, verbose : bool, dir : string)
{
    var dirs = Directory.GetDirectories(dir);
    for (int i = 0; i < dirs.Length; i++)
        readDir(root, verbose, dirs[i]);
    var files = Directory.GetFiles(dir);
    for (int i = 0; i < files.Length; i++)
    {
        var file = files[i];
        if (Path.GetExtension(file).ToLower() == ".adm")
            parse(root, verbose, file);
    }
}
