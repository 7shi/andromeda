I386.Test0();
MMX.Test();
SSE2.Test();

var module = new Module;
var c = new OpCodes;
const int STD_OUTPUT_HANDLE = -11;

var pGetStdHandle = module.GetFunction("kernel32.dll", "GetStdHandle");
var pWriteConsole = module.GetFunction("kernel32.dll", "WriteConsoleW");
var pExitProcess = module.GetFunction("kernel32.dll", "ExitProcess");

// HANDLE stdout = GetStdHandle(STD_OUTPUT_HANDLE);
var pstdout = Addr32.NewD(module.GetInt32("stdout"));
c.Add(I386.PushD(Val32.NewI(STD_OUTPUT_HANDLE)));
c.Add(I386.CallA(pGetStdHandle));
c.Add(I386.MovAR(pstdout, Reg32.EAX));

var hello = "こんにちは、世界！\r\n";
c.Add(I386.PushD(Val32.NewI(0)));
c.Add(I386.PushD(Val32.NewI(hello.Length)));
c.Add(I386.PushD(module.GetString(hello)));
c.Add(I386.PushA(pstdout));
c.Add(I386.CallA(pWriteConsole));

c.Add(I386.PushD(Val32.NewI(0)));
c.Add(I386.CallA(pExitProcess));

module.Text.OpCodes = c.ToArray();

var output = "a.exe";
module.Link(output);
printfln("output: %s", output);

{ _Finish _finish; }
