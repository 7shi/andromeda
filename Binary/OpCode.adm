class OpCode
{
	var Name : string;
	int Value, Size, BaseLength = 0;
	function get_Length { return Size + BaseLength; }
	
	var address : int*;
	var position;
	
	function get_Address
	{
		return Addr32.FromPointer(address, position);
	}
	
	virtual Write(ms : MemoryStream)
	{
		switch (Size)
		{
			case 1:
				ms.WriteByte(Value);
				break;
			case 2:
				ms.WriteShort(Value);
				break;
			case 4:
				ms.WriteInt(Value);
				break;
		}
	}
	
	virtual AddRelocs(list : VarList)
	{
	}
	
	function Set1(b1)
	{
		Value = b1;
		Size = 1;
	}
	
	function Set2(b1, b2)
	{
		Value = b1 | (b2 << 8);
		Size = 2;
	}
	
	function Set3(b1, b2, b3)
	{
		Value = b1 | (b2 << 8) | (b3 << 16);
		Size = 3;
	}
	
	function Set4(b1, b2, b3, b4)
	{
		Value = b1 | (b2 << 8) | (b3 << 16) | (b4 << 24);
		Size = 4;
	}
}
