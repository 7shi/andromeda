#pragma subsystem(WINDOWS_GUI)

const int width = 256, height = 256;

var count = 0, fps = 0, tick = 0;

var buffer = new PixelBuffer;
buffer.SetSize(width, height);

var fpsFormat[3];
fpsFormat[0] = " %d fps";
fpsFormat[1] = " %d fps(MMX)";
fpsFormat[2] = " %d fps(SSE2)";

var mode = 0;
if (buffer.EnableMMX ) mode = 1;
if (buffer.EnableSSE2) mode = 2;
var mode_max = mode;

var f = new Form1;
SetMode(mode);
f.Closed.Add(\ => Application.Exit());
f.Show();

Color c1, c2;
c1.SetArgb(0xa0, 0x00, 0x00, 0xff);
c2.SetArgb(0xa0, 0xff, 0x00, 0x00);

// ループ
while (Application.DoEvents())
{
	// 描画
	buffer.Clear();
	var bx = (count & 63) - 64;
	for (var i = 0; i < 4; i++)
		for (var j = 0; j < 5; j++)
			buffer.FillRectangle(c1, bx + j * 64, 8 + i * 64, 48, 48);
	for (var i = 0; i < 4; i++)
		for (var j = 0; j < 5; j++)
			buffer.FillRectangle(c2, 8 + i * 64, bx + j * 64, 48, 48);
	count++;
	f.canvas.Invalidate(null);
	
	// fps
	fps++;
	var t = GetTickCount(), d = t - tick;
	if (d > 1200)
	{
		fps = 0;
		tick = t;
	}
	else if (d > 1000)
	{
		f.label.Text = string.Format(fpsFormat[mode], fps);
		fps = 0;
		tick = t;
	}
}

class Form1 : Form
{
	var miOptNormal : MenuItem;
	var miOptMMX    : MenuItem;
	var miOptSSE2   : MenuItem;
	
	var label = new Label
	{
		Height = Font.Height;
		Dock = DockStyle.Bottom;
	};
	var canvas = new Control
	{
		function ctor
		{
			SetExStyle(WS_EX_CLIENTEDGE, true);
			SetClientSize(width, height);
		}
		
		override OnPaint(e : PaintEventArgs)
		{
			e.Graphics.DrawBuffer(buffer, 0, 0);
		}
		
		override OnMouseDown(e : MouseEventArgs)
		{
			var m = mode - 1;
			if (m < 0) m = mode_max;
			if (m != mode) SetMode(m);
		}
	};

	function ctor()
	{
		Text = "テスト";
		dwStyle = WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU;
		
		AddControl(canvas);
		AddControl(label);
		
		Menu = new MainMenu;
		SetClientSize(canvas.Width, canvas.Height + label.Height);
		
		var miFile = new MenuItem { Text = "ファイル(&F)"; };
		miFile.AppendItem("終了(&X)", \ => Close());
		Menu.Append(miFile);
		
		var miOpt = new MenuItem { Text = "オプション(&M)"; };
		miOptNormal = miOpt.AppendItem("通常演算(&N)", \ => SetMode(0));
		miOptNormal.UseRadio();
		miOptMMX = miOpt.AppendItem("&MMX", \ => SetMode(1));
		miOptMMX.Enabled = mode_max >= 1;
		miOptMMX.UseRadio();
		miOptSSE2 = miOpt.AppendItem("&SSE2", \ => SetMode(2));
		miOptSSE2.Enabled = mode_max == 2;
		miOptSSE2.UseRadio();
		Menu.Append(miOpt);
		
		var miHelp = new MenuItem { Text = "ヘルプ(&H)"; };
		miHelp.AppendItem("バージョン情報(&A)", \ =>
			MessageBox(hWnd, __VERSION__, "バージョン情報", 0));
		Menu.Append(miHelp);
	}
}

function SetMode(m)
{
	mode = m;
	fps = 0;
	f.label.Text = "";
	f.miOptNormal.Checked = m == 0;
	buffer.EnableMMX  = f.miOptMMX .Checked = m == 1;
	buffer.EnableSSE2 = f.miOptSSE2.Checked = m == 2;
	tick = GetTickCount();
}
