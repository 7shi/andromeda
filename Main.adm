_Finish _finish;

printfln("*** PE Test ***");

var args = __get_main_args();
if (args.Length > 0)
{
	for (int i = 0; i < args.Length; i++)
		ReadPE(args[i]);
	return 0;
}

// ----------------

PEModule pem;
pem.WinNT.SubSystem = 2; // WIN32_GUI

ImportTable user32;
user32.ImportLookupTable = pem.IData.VirtualAddress + sizeof(ImportTable) * 2;
user32.ImportAddressTable = user32.ImportLookupTable + 8;
user32.Name = user32.ImportAddressTable + 8;

var ms = new MemoryStream;
ms.WriteWithLength(user32, sizeof user32);
ms.Write(new byte[sizeof user32]);
var dll = cstr("user32.dll");
var padlen = Align(dll.Length + 1, 2);
ms.WriteInt(user32.Name + padlen);
ms.WriteInt(0);
ms.WriteInt(user32.Name + padlen);
ms.WriteInt(0);
ms.Write(dll);
ms.Write(new byte[padlen - dll.Length]);
ms.WriteShort(0);
ms.WriteByteString("MessageBoxW");
ms.WriteByte(0);
var idata = ms.ToArray();

ms = new MemoryStream;
ms.WriteString("こんにちは、世界！");
ms.WriteShort(0);
var text2 = ms.Length;
ms.WriteString("だいあろぐ");
ms.WriteShort(0);
var data = ms.ToArray();

ms = new MemoryStream;
ms.WriteByte(0x68); // push dword
ms.WriteInt(0);
ms.WriteByte(0x68); // push dword
ms.WriteInt(pem.WinNT.ImageBase + pem.Data.VirtualAddress + text2);
ms.WriteByte(0x68); // push dword
ms.WriteInt(pem.WinNT.ImageBase + pem.Data.VirtualAddress);
ms.WriteByte(0x68); // push dword
ms.WriteInt(0);
ms.WriteByte(0xb8); // mov eax, dword
ms.WriteInt(pem.WinNT.ImageBase + user32.ImportAddressTable);
ms.WriteByte(0xff); // call [eax]
ms.WriteByte(0x10);
ms.WriteByte(0xc3); // ret
var text = ms.ToArray();

var buf = pem.Link(text, data, idata);
var exe = "a.exe";
var fs = new FileStream;
if (!fs.OpenWrite(exe))
{
	printfln("書き込めません: %s", exe);
	return 1;
}
fs.Write(buf);
fs.Close();

// 結果表示
ReadPE(exe);
