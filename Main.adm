printfln("*** PE Test ***");
_Finish _finish;

var args = Environment.GetCommandLineArgs();
if (args.Length > 1)
{
	for (int i = 1; i < args.Length; i++)
	{
		println();
		if (i > 2)
		{
			println();
			printfln("-" * 32);
		}
		PEModule.ReadFile(args[i], true);
	}
	return 0;
}


// i386

var dll1 = new PEModule;
dll1.File.Characteristics |= IMAGE_FILE_DLL;
dll1.WinNT.ImageBase = 0x10000000;

var dll1t = new Block;
dll1t.AddByte(0xc3); // ret
dll1.Export("ShowMessage", dll1t.CurrentAddress);
dll1t.AddByte(0x68); // push dword
dll1t.AddInt(0);
dll1t.AddByte(0x68); // push dword
dll1t.AddAddress(dll1.GetString("だいあろぐ"));
dll1t.AddByte(0x68); // push dword
dll1t.AddAddress(dll1.GetString("こんにちは、世界！"));
dll1t.AddByte(0x68); // push dword
dll1t.AddInt(0);
dll1t.AddByte(0xb8); // mov eax, dword
dll1t.AddAddress(dll1.Import("USER32.DLL", "MessageBoxW"));
dll1t.AddByte(0xff); // call [eax]
dll1t.AddByte(0x10);
dll1t.AddByte(0xc3); // ret

println();
dll1.WriteFile("a.i386.dll", dll1t, true);

println();
printfln("-" * 32);

var exe1 = new PEModule;
exe1.WinNT.SubSystem = IMAGE_SUBSYSTEM_WINDOWS_GUI;

var exe1t = new Block;
exe1t.AddByte(0xb8); // mov eax, dword
exe1t.AddAddress(exe1.Import("a.i386.dll", "ShowMessage"));
exe1t.AddByte(0xff); // call [eax]
exe1t.AddByte(0x10);
exe1t.AddByte(0xc3); // ret

println();
exe1.WriteFile("a.i386.exe", exe1t, true);

println();
printfln("-" * 32);


// ARM

var dll2 = new PEModule;
dll2.File.Machine = IMAGE_FILE_MACHINE_ARM;
dll2.File.Characteristics = dll2.File.Characteristics | IMAGE_FILE_DLL;
dll2.WinNT.ImageBase = 0x10000000;
dll2.WinNT.SubSystem = IMAGE_SUBSYSTEM_WINDOWS_CE_GUI;

var dll2t = new Block;
dll2t.AddInt(0xe1a0c00d); // 00: mov ip, sp
dll2t.AddInt(0xe92dd800); // 04: stmfd sp!, {fp, ip, lr, pc}
dll2t.AddInt(0xe24cb004); // 08: sub fp, ip, #4
dll2t.AddInt(0xe89da800); // 0c: ldmfd sp, {fp, sp, pc}
dll2.Export("ShowMessage", dll2t.CurrentAddress);
dll2t.AddInt(0xe1a0c00d); // 10: mov ip, sp
dll2t.AddInt(0xe92dd800); // 14: stmfd sp!, {fp, ip, lr, pc}
dll2t.AddInt(0xe24cb004); // 18: sub fp, ip, #4
dll2t.AddInt(0xe3a00000); // 1c: mov r0, #0
dll2t.AddInt(0xe59f100c); // 20: ldr r1, [pc, #12] ; 0x34
dll2t.AddInt(0xe59f200c); // 24: ldr r2, [pc, #12] ; 0x38
dll2t.AddInt(0xe3a03001); // 28: mov r3, #1
dll2t.AddInt(0xeb000002); // 2c: bl 8 ; 0x3c
dll2t.AddInt(0xe89da800); // 30: ldmfd sp, {fp, sp, pc}
dll2t.AddAddress(dll2.GetString("こんにちは、世界！")); // 34
dll2t.AddAddress(dll2.GetString("だいあろぐ")); // 38
dll2t.AddInt(0xe59fc000); // 3c: ldr ip, [pc, #0] ; 0x44
dll2t.AddInt(0xe59cf000); // 40: ldr pc, [ip]
dll2t.AddAddress(dll2.Import("COREDLL.DLL", "MessageBoxW")); // 44

println();
dll2.WriteFile("a.arm.dll", dll2t, true);

println();
printfln("-" * 32);

var exe2 = new PEModule;
exe2.File.Machine = IMAGE_FILE_MACHINE_ARM;
exe2.WinNT.SubSystem = IMAGE_SUBSYSTEM_WINDOWS_CE_GUI;
exe2.WinNT.ImageBase = 0x10000;

var exe2t = new Block;
exe2t.AddInt(0xe1a0c00d); // 00: mov ip, sp
exe2t.AddInt(0xe92dd800); // 04: stmfd sp!, {fp, ip, lr, pc}
exe2t.AddInt(0xe24cb004); // 08: sub fp, ip, #4
exe2t.AddInt(0xeb000000); // 0c: bl 0 ; 0x14
exe2t.AddInt(0xe89da800); // 10: ldmfd sp, {fp, sp, pc}
exe2t.AddInt(0xe59fc000); // 14: ldr ip, [pc, #0] ; 0x1c
exe2t.AddInt(0xe59cf000); // 18: ldr pc, [ip]
exe2t.AddAddress(exe2.Import("a.arm.dll", "ShowMessage")); // 1c

println();
exe2.WriteFile("a.arm.exe", exe2t, true);
