printfln("Andromeda ver.%s", Root.VERSION);
println();
var start = DateTime.Now;

var root = new Root;
readDir("lib-Core");
readDir("lib-System");
parse("not-Test.adm");

printfln("コンパイルしています...");
var module = new Module;
module.Specific.SubSystem = IMAGE_SUBSYSTEM.WINDOWS_CUI;
var codes = OpModule.Create(module);
root.AddCodes(codes);
module.Text.OpCodes = codes.ToArray();

printfln("リンクしています...");
var output = "a.exe";
module.Link(output);
printfln("出力しました: %s", output);

var end = DateTime.Now;
printfln("所要時間: %dms", end.Sub(start).TotalMilliseconds);

{ _Finish _finish; }

function parse(src : string)
{
    var src2 = src.Replace("\\", "/");
    printfln("パースしています: %s", src2);
    var sr = new StreamReader;
    if (sr.Open(src))
    {
        root.ReadText(src2, sr.ReadToEnd());
        sr.Close();
    }
    else
        raise("ファイルが開けません。");
}

function readDir(dir : string)
{
    var dirs = Directory.GetDirectories(dir);
    for (int i = 0; i < dirs.Length; i++)
        readDir(dirs[i]);
    var files = Directory.GetFiles(dir);
    for (int i = 0; i < files.Length; i++)
    {
        var file = files[i];
        if (Path.GetExtension(file).ToLower() == ".adm")
            parse(file);
    }
}
