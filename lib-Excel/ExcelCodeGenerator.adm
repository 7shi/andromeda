class ExcelCodeGenerator
{
	var xx = new ExcelXML;
	var tw : TextWriter;
	var line : string[];
	int lnum;
	var typeFormat = new StringDictionary;
	
	function ctor
	{
		typeFormat.Add("uint",   "%08x");
		typeFormat.Add("ushort", "%04x");
		typeFormat.Add("byte",   "%02x");
		typeFormat.Add("int",    "%08x");
		typeFormat.Add("short",  "%04x");
		typeFormat.Add("char",   "'%c'");
	}
	
	function dtor
	{
		Close();
	}
	
	function Open(path : string)
	{
		Close();
		if (!xx.Open(path))
		{
			printfln("ファイルが開けません: %s", path);
			return false;
		}
		if (this.tw == null)
		{
			var tw = new StreamWriter;
			var adm = Path.ChangeExtension(path, ".adm");
			if (!tw.Open(adm))
			{
				printfln("ファイルに書き込めません: %s", adm);
				return false;
			}
			this.tw = tw;
			//printfln("%s => %s", path, adm);
		}
		WriteLine("// generated from %s", Path.GetFileName(path));
		return true;
	}
	
	function Close
	{
		xx.Close();
		line = null;
		lnum = 0;
		if (tw != null)
		{
			tw.Close();
			tw = null;
		}
	}
	
	function ReadLine()
	{
		if (xx == null) return false;
		line = xx.ReadLine();
		if (line == null) return false;
		lnum++;
		return true;
	}
	
	function Write(format : string, args : params)
	{
		if (tw != null) tw.VWrite(format, args);
	}
	
	function WriteLine(format : string, args : params)
	{
		if (tw != null) tw.VWriteLine(format, args);
	}
	
	function WriteLineOnly()
	{
		if (tw != null) tw.WriteLineOnly();
	}
	
	int head;
	
	function GetColumn(n)
	{
		if (line == null || line.Length < head + n) return null;
		return line[head + n];
	}
	
	function get_LineLength
	{
		if (line == null) return -1;
		return line.Length - head;
	}
	
	function Error(format : string, args : params)
	{
		WriteLine("// %d: %s", lnum, string.VFormat(format, args));
	}
	
	function Generate()
	{
		while (ReadLine())
		{
			var cmd = GetColumn(0);
			if (!string.IsNullOrEmpty(cmd)) ReadCommand(cmd);
		}
		Close();
	}
	
	virtual ReadCommand(cmd : string)
	{
		if (cmd == "head")
		{
			if (LineLength < 2)
				Error("%s: 引数がありません。", cmd);
			else
				head = GetColumn(1).ToInt();
		}
	}
}
