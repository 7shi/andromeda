class EventArgs
{
	function SetMessage(wndProc, hWnd, uMsg, wParam, lParam)
	{
		args[0] = wndProc;
		args[1] = hWnd;
		args[2] = uMsg;
		args[3] = wParam;
		args[4] = lParam;
	}
	
	virtual Default()
	{
		if (args[0] != null)
			CallWindowProc(args[0], args[1], args[2], args[3], args[4]);
	}
	
	static function FromMessage(wndProc, hWnd, uMsg, wParam, lParam)
	{
		var ret = new EventArgs;
		ret.SetMessage(wndProc, hWnd, uMsg, wParam, lParam);
		return ret;
	}
}

class PaintEventArgs : EventArgs
{
	var hDC;
	
	static function FromMessage(wndProc, hWnd, uMsg, wParam, lParam)
	{
		var ret = new PaintEventArgs;
		ret.SetMessage(wndProc, hWnd, uMsg, wParam, lParam);
		ret.hDC = GetDC(hWnd);
		return ret;
	}
}

class MouseEventArgs : EventArgs
{
	int Button, X, Y;
	
	static function FromMessage(wndProc, hWnd, uMsg, wParam, lParam)
	{
		var ret = new MouseEventArgs;
		ret.SetMessage(wndProc, hWnd, uMsg, wParam, lParam);
		switch (uMsg)
		{
			case WM_LBUTTONDOWN:
			case WM_LBUTTONUP:
			case WM_LBUTTONDBLCLK:
				ret.Button = MK_LBUTTON;
				break;
			case WM_RBUTTONDOWN:
			case WM_RBUTTONUP:
			case WM_RBUTTONDBLCLK:
				ret.Button = MK_RBUTTON;
				break;
			case WM_MBUTTONDOWN:
			case WM_MBUTTONUP:
			case WM_MBUTTONDBLCLK:
				ret.Button = MK_MBUTTON;
				break;
			case WM_MOUSEMOVE:
				ret.Button = wParam;
				break;
		}
		ret.X = GET_X_LPARAM(lParam);
		ret.Y = GET_Y_LPARAM(lParam);
		return ret;
	}
}

class KeyEventArgs : EventArgs
{
	static function FromMessage(wndProc, hWnd, uMsg, wParam, lParam)
	{
		var ret = new KeyEventArgs;
		ret.SetMessage(wndProc, hWnd, uMsg, wParam, lParam);
		return ret;
	}
}

class KeyPressEventArgs : EventArgs
{
	bool Handled;
	char KeyChar;
	
	override Default()
	{
		if (!Handled) base.Default();
	}
	
	static function FromMessage(wndProc, hWnd, uMsg, wParam, lParam)
	{
		var ret = new KeyPressEventArgs;
		ret.SetMessage(wndProc, hWnd, uMsg, wParam, lParam);
		ret.KeyChar = wParam;
		return ret;
	}
}
