/// αブレンド

#pragma subsystem(WINDOWS_GUI)

const int width = 256, height = 256;
var bmp = new Bitmap;
bmp.SetSize(width, height);

var mode = 0;
if (bmp.EnableMMX ) mode = 1;
if (bmp.EnableSSE2) mode = 2;
var mode_max = mode;

char fpsBuf[1025];
var fpsBufLen = 0;
var fpsFormat[3];
fpsFormat[0] = "%d fps";
fpsFormat[1] = "%d fps(MMX)";
fpsFormat[2] = "%d fps(SSE2)";

var f = new Form1;
f.Show();
f.Closed.Add(\ => Application.Exit());

// ループ
var count = 0;
var fps = 0;
var tick = GetTickCount();
while (Application.DoEvents())
{
	// 描画
	bmp.Clear();
	var bx = (count & 63) - 64;
	for (var i = 0; i < 4; i++)
		for (var j = 0; j < 5; j++)
			bmp.FillRectangle(0xa00000ff, bx + j * 64, 8 + i * 64, 48, 48);
	for (var i = 0; i < 4; i++)
		for (var j = 0; j < 5; j++)
			bmp.FillRectangle(0xa0ff0000, 8 + i * 64, bx + j * 64, 48, 48);
	count++;
	f.Invalidate(null);
	
	// fps
	fps++;
	var t = GetTickCount(), d = t - tick;
	if (d > 1200)
	{
		fps = 0;
		tick = t;
	}
	else if (d > 1000)
	{
		fpsBufLen = wsprintf(fpsBuf, fpsFormat[mode], fps);
		fps = 0;
		tick = t;
	}
}

class Form1 : Form
{
	var miOptNormal = new MenuItem;
	var miOptMMX    = new MenuItem;
	var miOptSSE2   = new MenuItem;
	
	function ctor()
	{
		Text = "テスト";
		dwStyle = WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU;
		MainMenu = new MainMenu;
		SetClientSize(width, height);
		
		var miFile = new MenuItem;
		miFile.Text = "ファイル(&F)";
		var miFileExit = new MenuItem;
		miFileExit.Text = "終了(&X)";
		miFileExit.Click.Add(\ => Close());
		miFile.Append(miFileExit);
		MainMenu.Append(miFile);
		
		var miOpt = new MenuItem;
		miOpt.Text = "オプション(&M)";
		miOptNormal.Text = "通常演算(&N)";
		miOptNormal.UseRadio();
		miOptNormal.Click.Add(\ => SetMode(0));
		miOptMMX.Text = "&MMX";
		miOptMMX.Enabled = mode_max >= 1;
		miOptMMX.UseRadio();
		miOptMMX.Click.Add(\ => SetMode(1));
		miOptSSE2.Text = "&SSE2";
		miOptSSE2.Enabled = mode_max == 2;
		miOptSSE2.UseRadio();
		miOptSSE2.Click.Add(\ => SetMode(2));
		miOpt.Append(miOptNormal);
		miOpt.Append(miOptMMX);
		miOpt.Append(miOptSSE2);
		MainMenu.Append(miOpt);
		
		var miHelp = new MenuItem;
		miHelp.Text = "ヘルプ(&H)";
		var miHelpAbout = new MenuItem;
		miHelpAbout.Text = "バージョン情報(&A)";
		miHelpAbout.Click.Add(\ =>
			MessageBox(hWnd, __VERSION__, "バージョン情報", 0));
		miHelp.Append(miHelpAbout);
		MainMenu.Append(miHelp);
		
		SetMode(mode);
	}
	
	override OnPaint(e : PaintEventArgs)
	{
		var g = e.Graphics;
		g.SetDIBitsToDevice(
			0, 0, width, height, 0, 0, 0, height,
			bmp.Buffer, bmp, DIB_RGB_COLORS);
		if (fpsBufLen > 0)
			g.TextOut(8, 8, fpsBuf, fpsBufLen);
	}
	
	override OnMouseDown(e : MouseEventArgs)
	{
		var m = mode - 1;
		if (m < 0) m = mode_max;
		if (m != mode) SetMode(m);
	}

	function SetMode(m)
	{
		mode = m;
		fpsBufLen = 0;
		fps = 0;
		miOptNormal.Checked = m == 0;
		bmp.EnableMMX  = miOptMMX .Checked = m == 1;
		bmp.EnableSSE2 = miOptSSE2.Checked = m == 2;
		tick = GetTickCount();
	}
}
