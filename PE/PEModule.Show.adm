class PEModule
{
	function Show
	{
		printfln("%p: [DOSHeader]", 0);
		DOS.Show();
		var p = PESignatureAddress + 4;
		
		println();
		printfln("%p: [PEFileHeader]", p);
		File.Show();
		p += sizeof PEFileHeader;
		
		println();
		printfln("%p: [PEHeaderStandardFields]", p);
		Std.Show();
		p += sizeof PEHeaderStandardFields;
		
		println();
		printfln("%p: [PEHeaderWindowsNTSpecificFields]", p);
		WinNT.Show();
		p += sizeof PEHeaderWindowsNTSpecificFields;
		
		println();
		printfln("%p: [PEHeaderDataDirectories]", p);
		Dir.Show();
		p += sizeof PEHeaderDataDirectories;
		
		var sects = sections.Values;
		for (int i = 0; i < sects.Length; i++)
		{
			var sect = ((CSectionHeader)sects[i]).Header;
			if (sect.VirtualSize > 0)
			{
				println();
				printfln("%p: [SectionHeader]", p);
				printfln("Name: %s", sect.Name);
				sect.Show();
				p += sizeof(SectionHeader);
			}
		}
		
		ParseImport();
		ParseExport();
		ParseReloc();
		
		return true;
	}
}
